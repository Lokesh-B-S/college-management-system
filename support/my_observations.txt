References:-

teaching department ->(referred from) batch
OpenElectiveType ->(referred from) CourseType
Openelecive controller ->(referred from) academic year controller


--------------------------------


dont include input tag (of id for example) in the html page where you are still working to collect details, use it in other page



//my observations

dont try to retrieve the id of a row by passing other fields to service directly, it may show errors in runtime
instead take it to a variable (example branchSemSec) by passing the fields and then try fetching id as variable.branchSemSecId;
ex:
 if (branchSemSecService.existsEntry(branchSemSec)) {
            redirectAttributes.addFlashAttribute("message", "Entry already exists.");
            BranchSemSec branchSemSec1 = branchSemSecService.findRow(branchSemSec);
            return "redirect:/admin/editTimeTable?id=" + branchSemSec1.getBranchSemSecId();



in database, sometimes even after deleting and commit, the deleted rows reappear
try like:- where id between 3 and 300 (it works) or even sometimes where id=3





if there is an error saying persistenceExcpetion:
and annotations to column names in entity, example @ManyToOne for "private Branch branch"



Error:
2023-09-20 11:16:51.959 ERROR 19124 --- [io-8080-exec-10] o.h.engine.jdbc.spi.SqlExceptionHelper   : Cannot add or update a child row: a foreign key constraint fails (`cms_db`.`time_table_entry`, CONSTRAINT `FK5sldqkoa5ftuh4wnefvpd0blf` FOREIGN KEY (`time_slot_id`) REFERENCES `old_time_slot` (`id`))

Solution:
in database(MySQl)it will sometimes be still referencing the old table if you have created any alternative table to it
hence drop that foreign key constraint and try again.
NOTE: from the referencing table, DROP FK first and then DROP column and then try again.



---------
Error:
PersistenceExcpetion
Solution:
Add annotations to fields in entity(example @ManyToOne)
----------

Error: Caused by: org.hibernate.AnnotationException: @OneToOne or @ManyToOne on com.ras.cms.domain.Batch.batchName references an unknown entity: java.lang.String
Solution: Dont mark @ManyToOne for other fields which are not foriegn values (example batchName)
---------

Error:Field batchService in com.ras.cms.controller.BatchController required a bean of type 'com.ras.cms.service.batch.BatchService' that could not be found.
Soultion:-
check if you have mentioned BatchServiceImpl implements BatchService
---------

findAllByBranchAndSemesterAndSection(this is to fetch mutliple rows)
findByBranchAndSemesterAndSection(returns single entity or null if not found)
--------------
note:-
for 2 fields it is findAllByBranchAndSemester
for 3 fields it is findAllByBranchAndSemesterAndSection
----------------


Error: Failed to convert value of type 'java.lang.String' to required type 'com.ras.cms.domain.AcademicYear'; nested exception is org.springframework.core.convert.ConversionFailedException: Failed to convert from type [java.lang.String] to type [java.lang.Long] for value '2021-22'; nested exception is java.lang.NumberFormatException: For input string: "2021-22"
Solution:dont try to do: in getMapping and postMapping and service , check for the object, pass the datatype instead of object if not working
refer academicYear for this.
LAtest solution:- Dont create ambiguous variable names (example: academicYear as both object and variable name)
----------------



Error: (in javascript for TT entry delete functionality)
editTimeTable?id=1:98 Uncaught TypeError: Cannot read properties of null (reading 'addEventListener')

reason:
<!--                    <a href="#" id="deleteLink" class="btn btn-danger" role="button">Delete</a>-->
(in script)
 // Attach the deleteEntry function to the click event of the delete link
       // document.getElementById("deleteLink").addEventListener("click", deleteEntry);

solution:
         <button class="btn btn-danger" onclick="deleteEntry()">Delete</button>




for multiple courses:
add course also in DoesEntryExist(branchSemSecId,day,timeslot)




----------------
table-striped in <table> for getting stripped rows
----------------

select * from course_faculty;

ALTER TABLE time_table_entry DROP FOREIGN KEY FKnocrltojbwqshoojhhwa1u7sr;

ALTER TABLE course_faculty DROP COLUMN branch_branch_id;


update course set department_department_id=1 where course_id<23;

select * from batch_year_dept_program_sem;
select * from course;

delete from course where department_department_id =1 ;
delete from course_faculty where course_faculty_id between 5 and 6;
delete from course where course_id in(42,43,45,46,47);

update course set teaching_department_teaching_department_id=1 where course_id between 39 and 49;

update program set department_department_id=3 where program_id=6;
select * from program;




----------------------
// Calculate the sums
int totalLectureCredits = courses.stream().mapToInt(Course::getLectureCredits).sum();
int totalTutorialCredits = courses.stream().mapToInt(Course::getTutorialCredits).sum();
int totalPracticalCredits = courses.stream().mapToInt(Course::getPracticalCredits).sum();
int totalTotalCredits = courses.stream().mapToInt(Course::getTotalCredits).sum();
int totalContactHours = courses.stream().mapToInt(Course::getContactHours).sum();

model.addAttribute("totalLectureCredits", totalLectureCredits);
model.addAttribute("totalTutorialCredits", totalTutorialCredits);
model.addAttribute("totalPracticalCredits", totalPracticalCredits);
model.addAttribute("totalTotalCredits", totalTotalCredits);
model.addAttribute("totalContactHours", totalContactHours);


--------------------------
incase if you are getting new row added after edit
check if have missed <input type=hidden ${techingDept.id} in teachingdeptedit.html

---------------------------
incase the value from html is null in controller,
 check with the name="abcd" in the input of that html
 example : name="courseType" better than name="courseType.courseTypeId"

---------------------------
Caused by: java.lang.IllegalStateException: Ambiguous mapping. Cannot map 'openElectiveController' method
solution: check if any same method names in controllers.

-------------------------------
Error: 'p' tried to access /hod/openElectiveType
Solution: check the order of urls in getmapping and postmapping
also check the particular html page in 'form' attribute.

--------------------------------
Always note that the @ManyToOne or other such annotations are used for Entities connected to each other (like private Department department), not for the normal strings like (private String department)

--------------------------------
Dynamic:
Use @RestController instead of @Controller in controller(ex: programController) for dynamic rows implementation
Flow: MainController -> HTML page -> ProgramController -> repo

--------------------------------
GIT

(ensure app is not running)

git status (if you want to see the files that are changed)

git branch :- ensure its lokesh branch and not master
git add . :- to add all files to stage
git commit -m "CMS#21 - committing file named"
git push origin lokesh
(authorize the request in gitlab in browser: Lokesh-B-S-001 and Loki@2023)

------------------------------------
To fetch the part of data from an html page to controller:
Note:
use @RequestParam
name attribute must match in both
ensure name=openElectiveType and not like name=openElectiveType.id in both html page and controller post method
use it in POST
required=false is necessary to avoid diff URL conflict in post


refer this:
 @PostMapping({"hod/selectOpenElective", "/admin/selectOpenElective"})
    public String selectandsubmitOpenElectiveCourse(Model model, Authentication authentication,
                                                    BatchYearSemTerm batchYearSemTerm, RedirectAttributes redirectAttributes, HttpServletRequest request,
                                                    @RequestParam(required= false, name="openElectiveType") Long openElectiveTypeId) {

       System.out.println(openElectiveTypeId);

-----------------------------------------------
sometimes, if the model.attribute is not visible in html page, try with if condition it works:
<div th:if="${batchYearSemTermm}">
        <p th:text="${batchYearSemTermm.batch.batchName}"></p>
    </div>

-------------------------------
when writing links in <script>:
   $.getJSON("/hod/openElectives/batchYearSemTermId", function (data) {} :- seems static, instead use
   $.getJSON("/hod/openElectives/" + batchYearSemTermId, function (data) {}

  ----------------------------
when we write both href and th:href="" , href is ignored.
--------------------------------
dynamic:

error: JSON parse error: Cannot deserialize value of type java.lang.Long from Object value (token JsonToken.START_OBJECT); nested exception is com.fasterxml.jackson.databind.exc.MismatchedInputException:
solution: (refer parseInt part in eligibleStudentEditD)

try printing rowData in console to check the structure( in my case it was aca>id>id>'3' instead of aca>id>'3'

rowData.academicYear.id =parseInt( $("#academicYearId").val());
 rowData.program.programId = parseInt( $("#programId").val());
 rowData.semester.semId = parseInt($("#semId").val());
 rowData.term.id = parseInt( $("#termId").val());
 rowData.department.departmentId = parseInt( $("#departmentId").val());

 note that this part is different from courseEditD but both works.




------------------------------
Notes:

faculty registration:
faculty ID, DoB, DoJ, Male/female, regular/temporary, category:3A,3B etc, Dept, date of leaving (no program)

--------------------------------
Error: There was an unexpected error (type=Bad Request, status=400).
       "Required request parameter 'academicYear' for method parameter type academicYear is not present"
       org.springframework.web.bind.MissingServletRequestParameterException: Required request parameter 'noOfSections' for method parameter type Integer is not present
       	at org.springframework.web.method.annotation.RequestParamMethodArgumentResolver.handleMissingValueInternal(RequestParamMethodArgumentResolver.java:218)
try this way:


            <input type="hidden" name="academicYear" th:value="*{academicYear.id}" />
            <input type="hidden" name="program" th:value="*{program.programId}" />
            <input type="hidden" name="semester" th:value="*{semester.semId}" />
            <input type="hidden" name="term" th:value="*{term.id}" />


                                                  @RequestParam("academicYear") AcademicYear academicYear,
                                                  @RequestParam("program") Program program,
                                                  @RequestParam("semester") Semester semester,
                                                  @RequestParam("term") Term term,
                                                  @RequestParam("noOfSections") Integer noOfSections,
-------------------------------------------
Error processing entry: section=2
java.lang.NumberFormatException: For input string: "section"

solution:      if (entry.getKey().equals("semester") || entry.getKey().equals("academicYear") || entry.getKey().equals("program") || entry.getKey().equals("term") || entry.getKey().equals("section") || entry.getKey().equals("noOfSections")) {

--------------------------------------------
Sometimes th:href causes problem in <a href="" th:href="" /> , remove and try it works
-----------------------------------

doubt to ask 9th feb 2024:
student id is different to each sem students.
if a student is in 2mnd sem, selects pe from 1st sem,  it saves to same eligiblestudentId ie replaces the present 2nd sem pe with the selected 1st sem pe and viceversa.

if student is in 3rd sem, the oe and pe1 pe2 gets replaced if i save them to same eligibleStudentId from different semester say sem1



---------------------------------------
potential issue that to be resolved:

when selecting a academic year,batch, sem, term
(a new batchYearSemTerm row gets created)
if same values like 17,12,1,1 and 17,13,1,1 are found when querying like example:         BatchYearSemTerm batchYearSemTerm = batchYearSemTermService.getRowByAcademicYearAndSemesterAndTerm(academicYear, semester, term);
(sometimes user when adding a new course etc may give NH24 as batch and select 2023-24 AY, there is is the issue created in batchYearSemTerm table)
it results in error as:

query did not return a unique result: 2; nested exception is javax.persistence.NonUniqueResultException: query did not return a unique result: 2
org.springframework.dao.IncorrectResultSizeDataAccessException: query did not return a unique result: 2; nested exception is javax.persistence.NonUniqueResultException: query did not return a unique result: 2

-------------------------------------

There was an unexpected error (type=Internal Server Error, status=500).
org.hibernate.TransientPropertyValueException: object references an unsaved transient instance - save the transient instance before flushing : com.ras.cms.domain.StudentCourseRegistration.currentAcademicYear -> com.ras.cms.domain.AcademicYear; nested exception is java.lang.IllegalStateException: org.hibernate.TransientPropertyValueException: object references an unsaved transient instance - save the transient instance before flushing : com.ras.cms.domain.StudentCourseRegistration.currentAcademicYear -> com.ras.cms.domain.AcademicYear

solution:

 what I thought:
 (cascade = CascadeType.ALL)
in entity if we have @ManyToOne or such for more than one AcademicYear type, we get this error

what actually is:
in postmapping, requestparam for academicYear, program, sem,term from its html page is must
(Not direclty AcademicYear academicYear, instead @RequestParam(name="academicYear") Long academicYearId)

--------------------------------------
note: th:name is not allowed in option tag, instead restricted to <select> itself
<option th:each="course : ${allRegisteredCoursesList}" th:name="course" th:value="${course.courseId}" not allowed



---------------------------------------
